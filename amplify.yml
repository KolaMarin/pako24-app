version: 1
frontend:
  phases:
    preBuild:
      commands:
        - npm ci --ignore-scripts
        - npx prisma generate
        - |
          cat << EOF > .env
          DATABASE_URL="postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}"
          DB_USER=${DB_USER}
          DB_PASSWORD=${DB_PASSWORD}
          DB_HOST=${DB_HOST}
          DB_PORT=${DB_PORT}
          DB_NAME=${DB_NAME}
          APP_URL=${APP_URL}
          PORT=${PORT}
          NODE_ENV=${NODE_ENV}
          EOF
          
          # Print debug info (hiding password)
          echo "DATABASE_URL configured with host: ${DB_HOST}, user: ${DB_USER}, db: ${DB_NAME}"
          
          # Test database connection
          node -e "
          const { testDatabaseConnection } = require('./lib/prisma');
          (async () => {
            console.log('Testing database connection...');
            const result = await testDatabaseConnection();
            if (!result.success) {
              console.error('Database connection test failed:', result.error);
              process.exit(1);
            } else {
              console.log('Database connection successful!');
            }
          })().catch(err => {
            console.error('Connection test error:', err);
            process.exit(1);
          });
          "
    build:
      commands:
        - npm run build
        - echo "Build completed at $(date)"

    postBuild:
      commands:
        - echo "Build completed successfully!"

  artifacts:
    baseDirectory: .next
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
      - .next/cache/**/*
  customHeaders:
    - pattern: '**/*'
      headers:
        - key: 'Cache-Control'
          value: 'public, max-age=0, must-revalidate'

# Configure AWS Amplify logging
amplify:
  logging:
    level: debug # Options: debug, info, warn, error
    cloudwatch: true
    accessLogging: true
    applicationLogLevel: debug
    frameworkLogLevel: debug
